[tox]
minversion = 4.11.4
env_list = py{310,311,312}-mol{600,603}

#
# Usage:  tox [-e <enviroment>] [-- <pytest-options>]
#         tox -l  # to list environments
#
[testenv]
description = Run the tests
package = wheel
wheel_build_env = .pkg
deps =
    pytest==7.4.4
    ansible==9.1.0
    molecule-plugins[docker]==23.5.0
    mol600: molecule==6.0.0
    mol603: molecule==6.0.3
passenv =
    SSH_*
    PROXMOX_*
commands =
    pytest -v tests {posargs}

#
# Usage:  tox -e dev
#
# To activate the development environment:
#
#    deactivate
#    source .tox/dev/bin/activate
#
# Then run molecule in the tests directory:
#
#    cd tests
#    BOX=<box> BOX_VERSION=<version> molecule test [-s <scenario>]
#    cd ..
#
# Or run the tests with pytest:
#
#    pytest --co tests            # list tests
#    pytest -v [-k <pattern>] tests # run tests
#
[testenv:dev]
description = Development environment
basepython = python3.12
usedevelop = True
deps =
    pytest==7.4.4
    ansible==9.1.0
    molecule-plugins[docker]==23.5.0
    molecule==6.0.3
passenv =
    SSH_*
    PROXMOX_*
commands =

#
# Usage:  tox -e lint
#
[testenv:lint]
description = Run static checks
basepython = python3.12
setenv =
    ANSIBLE_LIBRARY = src/molecule_proxmox
deps =
    ansible==9.1.0
    ansible-lint==6.22.2
    collective.checkdocs==0.2
    flake8==7.0.0
    pyflakes==3.2.0
    pylint==3.0.3
    setuptools==69.0.3
    yamllint==1.33.0
commands =
    pyflakes src tests
    #flake8 src tests
    yamllint src tests
    ansible-lint src/molecule_proxmox/playbooks
    python setup.py -q checkdocs

#
# Usage:  tox -e docs
#
[testenv:docs]
description = Build documentation
basepython = python3.12
changedir = docs
deps =
    Sphinx==7.2.6
    sphinx-rtd-theme==2.0.0
commands =
    sphinx-build -M html source build

#
# Usage:  tox -e release
#
# Note: Set TWINE env vars or ~/.pypirc before running.
#
[testenv:release]
basepython = python3.12
passenv =
    TWINE_USERNAME
    TWINE_PASSWORD
    TWINE_REPOSITORY_URL
deps =
    build==1.0.3
    twine==4.0.2
commands =
    python -m build
    twine check dist/*
    twine upload --repository molecule-proxmox --skip-existing dist/*
